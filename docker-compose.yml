version: "3"

services:
  api:
    restart: always
    build:
      context: ./services/api
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
      - kafka
      - redis
    networks:
      - tiny-network
  redis:
    image: redis/redis-stack:latest
    user: root
    restart: always
    ports:
      - "6379:6379"
      - "8001:8001"
    environment:
      REDIS_ARGS: --requirepass ${REDIS_UI_PASSWORD}
    volumes:
      - ./data_redis:/var/lib/redis/data
  postgresql:
    build:
      context: ./services/postgresql
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - tiny-network

  prometheus:
    build:
      context: ./services/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - api
      - kafka
    volumes:
      - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_LISTENERS: PLAINTEXT://:9093 # Change this to match the above port
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 200000000 # Adjust this value as needed
    volumes:
      - ./kafka-data:/var/lib/kafka/data

  rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    depends_on:
      - kafka
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9093
      KAFKA_REST_HOST_NAME: rest-proxy

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SECURITY_ADMIN_PASSWORD=your_admin_password
    networks:
      - tiny-network
    depends_on:
      - prometheus

volumes:
  postgresql-data:
  data_redis:
  prometheus:

networks:
  tiny-network:
